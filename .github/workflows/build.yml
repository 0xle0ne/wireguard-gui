# Build the application

name: Build

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: true

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      # Cache Rust
      - uses: actions/cache@v3
        with:
          path: ./src-tauri/target
          key: ubuntu-latest-${{ hashFiles('./src-tauri/Cargo.lock') }}

      # Cache Rust
      - uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ubuntu-latest-${{ hashFiles('./src-tauri/Cargo.lock') }}

      # Cache Node
      - uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ubuntu-latest-${{ hashFiles('./package-lock.json') }}

      # Cache Next.js
      - uses: actions/cache@v3
        with:
          path: ./.next
          key: ubuntu-latest

      - name: Install Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Tauri dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libjavascriptcoregtk-4.1-dev \
            libsoup-3.0-dev \
            libpango1.0-dev \
            libcairo2-dev \
            libgdk-pixbuf-2.0-dev \
            libharfbuzz-dev \
            libatk1.0-dev \
            libglib2.0-dev \
            zlib1g-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libssl-dev

      - name: Enable static CRT
        run: |
          echo "RUSTFLAGS=-C target-feature=+crt-static" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_SYSROOT_DIR=/" >> $GITHUB_ENV

      - name: Install node dependencies
        run: npm install

      - name: Build application
        run: npm run tauri build -- --verbose --target x86_64-unknown-linux-gnu
