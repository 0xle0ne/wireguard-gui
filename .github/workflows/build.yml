# Build the application

name: Build

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: true

    runs-on: ubuntu-latest
    container: rust:1.90.0-alpine3.22

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      # Cache Rust
      - uses: actions/cache@v3
        with:
          path: ./src-tauri/target
          key: ubuntu-latest-${{ hashFiles('./src-tauri/Cargo.lock') }}

      # Cache Rust
      - uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ubuntu-latest-${{ hashFiles('./src-tauri/Cargo.lock') }}

      # Cache Node
      - uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ubuntu-latest-${{ hashFiles('./package-lock.json') }}

      # Cache Next.js
      - uses: actions/cache@v3
        with:
          path: ./src-next/.next
          key: ubuntu-latest

      - name: Install dependencies
        run: |
          # Base toolchain and essentials
          apk add --update \
            alpine-sdk \
            musl-dev \
            g++ \
            make \
            git \
            perl \
            dpkg \
            bash \
            pkgconf \
            openssl-dev \
            nodejs \
            npm
          rustup target add x86_64-unknown-linux-musl

      - name: Install Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Tauri dependencies
        run: |
          apk add --no-cache ca-certificates curl gnupg libstdc++ libgcc
          # GUI stack needed by Tauri (WebKitGTK + GTK3 and friends)
          apk add --no-cache \
            build-base \
            curl \
            wget \
            file \
            gtk+3.0-dev \
            webkit2gtk-4.1-dev \
            glib-dev \
            pango-dev \
            cairo-dev \
            gdk-pixbuf-dev \
            harfbuzz-dev \
            atk-dev \
            libsoup3-dev \
            zlib-dev \
            fribidi-dev \
            librsvg

      - name: Disable static CRT for musl linking
        run: |
          echo "RUSTFLAGS=-C target-feature=-crt-static" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_SYSROOT_DIR=/" >> $GITHUB_ENV

      - name: Install node dependencies
        run: npm install

      - name: Build application
        run: npm run tauri build -- --verbose --target x86_64-unknown-linux-musl
